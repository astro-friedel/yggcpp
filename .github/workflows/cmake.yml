name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install packages
      run: |
        sudo pip3 install numpy
        sudo apt-get update
        sudo apt-get install -y libboost-log-dev libgomp1 libczmq-dev lcov libzmq3-dev
        
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make test

    - name: Coverage
      working-directory: ${{github.workspace}}/build
      run: make coverage
      
    #- name: Coverage report
    #  uses: romeovs/lcov-reporter-action@v0.2.11
    #  with:
    #    github-token: ${{ secrets.GITHUB_TOKEN }}
    #    lcov-file: ${{github.workspace}}/build/coverage.info
